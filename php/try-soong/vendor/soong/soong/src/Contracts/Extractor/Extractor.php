<?php
declare(strict_types=1);

namespace Soong\Contracts\Extractor;

use Soong\Contracts\Configuration\ConfigurableComponent;
use Soong\Contracts\Data\Record;

/**
 * Extractors turn a data source into a series of Records.
 */
interface Extractor extends ConfigurableComponent
{

    /**
     * Iterator taking into account any applicable filtering.
     *
     * @return Record[]
     *   One data record from the source being extracted.
     */
    public function extractFiltered() : iterable;

    /**
     * Iterator over all canonical source data.
     *
     * Note filtering may be applied here to the raw data, if there are records
     * in the raw source which are not part of the logical source for this
     * extraction process.
     *
     * @return Record[]
     *   One data record from the source being extracted.
     *
     * @throws \Soong\Contracts\Exception\ExtractorException
     */
    public function extractAll() : iterable;

    /**
     * List the properties available in records generated by this extractor.
     *
     * @return array
     *   Array of property names.
     */
    public function getProperties() : array;

    /**
     * List the properties which form a unique key for the extracted data.
     *
     * @return array
     *   Array keyed by property name, with value being an array containing
     *   a 'type' key whose value is the type of the property.
     */
    public function getKeyProperties() : array;
}
